require 'spec_helper'
require 'rspec/mocks'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe UserDaysController do

  before :each do
    subject.stub :authenticate_user!
  end

  def mock_user_day(stubs={})
    @mock_user_day ||= mock_model(UserDay, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns user_day as @mock_user_day" do
      User.stub(:get_team_users) { [] }
      controller.stub(:current_user){ FactoryGirl.build(:manager) }
      UserDay.stub(:new) { mock_user_day }
      get :index
      expect(assigns(:user_day)).to eq(mock_user_day)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created user_day as @user_day" do
        UserDay.stub(:new) { mock_user_day(save: true) }
        post :create, user_day: { user_day: {} }
        expect(assigns(:user_day)).to be(mock_user_day)
      end

      it "redirects to the user days root" do
        UserDay.stub(:new) { mock_user_day(save: true) }
        post :create, user_day: { user_day: {} }
        expect(response).to redirect_to(user_days_url)
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved user_day as @user_day" do
        UserDay.stub(:new) { mock_user_day(save: false) }
        post :create, user_day: { user_day: {} }
        expect(assigns(:user_day)).to be(mock_user_day)
      end

      it "redirects to the user days root" do
        UserDay.stub(:new) { mock_user_day(save: false) }
        post :create, user_day: { user_day: {} }
        expect(response).to redirect_to(user_days_url)
      end
    end
  end

end
